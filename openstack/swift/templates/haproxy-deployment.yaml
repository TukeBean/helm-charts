{{- range $cluster_id, $cluster := .Values.clusters }}
{{- $az_apods := dict }}
{{- /*
If aPod design is available take availability zones from there, with a list of aPods
Else construct the same structure from the AZ list
This and the affinities for 'cp' can go if aPod rollout is completed globally
*/ -}}
{{- if $.Values.global.apods }}
{{- $az_apods = $.Values.global.apods }}
{{- else }}
{{- range $az := $.Values.global.availability_zones }}
{{- $az_apods = set $az_apods $az list }}
{{- end }}
{{- end }}
{{- range $az, $apods := $az_apods }}
{{- if $.Values.global.cp }}
{{- $apods = append $apods "cp" }}
{{- end }}
{{- range $apod := $apods }}
kind: Deployment
apiVersion: apps/v1

metadata:
  name: swift-haproxy-{{ $cluster_id }}-{{ $az }}{{ if ne $apod "cp" }}-{{ $apod }}{{ end }}
  labels:
    release: "{{ $.Release.Name }}"
    os-cluster: {{ $cluster_id }}
spec:
  revisionHistoryLimit: 5
  {{- $replicas_az := default 2.0 (index $cluster (printf "haproxy_deployment_replicas_%s" $az)) }}
  replicas: {{ $replicas_az }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      {{- if eq $replicas_az 1.0 }}
      maxUnavailable: 0
      {{- else }}
      maxUnavailable: 1
      {{- end }}
      maxSurge: 2
  selector:
    matchLabels:
      component: swift-haproxy-{{ $cluster_id }}
  template:
    metadata:
      labels:
        component: swift-haproxy-{{ $cluster_id }}
        alert-tier: os
        alert-service: swift
        from: deployment
        os-cluster: {{ $cluster_id }}
        for-service: swift-proxy-{{ $cluster_id }}
        availability-zone: {{ $az }}
        apod: {{ $apod }}
      annotations:
        checksum/haproxy.bin: {{ include "swift/templates/haproxy-bin-configmap.yaml" $ | sha256sum }}
        checksum/haproxy-cluster.etc: {{ include "swift/templates/etc/haproxy-cluster-configmap.yaml" $ | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/targets: {{ required ".Values.alerts.prometheus.openstack missing" $.Values.alerts.prometheus.openstack }}
    spec:
      {{- if (index $cluster (printf "haproxy_deployment_tolerate_swift_%s_%s" $az $apod)) }}
      tolerations:
      - key: "species"
        operator: "Equal"
        value: "swift-storage"
        effect: "NoSchedule"
      {{- end }}
      nodeSelector:
        {{- if eq $apod "cp" }}
        failure-domain.beta.kubernetes.io/zone: {{ $az }}
        {{- else }}
        kubernetes.cloud.sap/apod: {{ $apod }}
        {{- end }}
      affinity:
        {{- if eq $apod "cp" }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.cloud.sap/apod
                operator: DoesNotExist
        {{- end }}
        podAntiAffinity:
          # Prefere to be scheduled on nodes not yet running this proxy from a deplyoment
          # kubernetes.io/hostname legacy control plane
          # kubernetes.cloud.sap/host aPod bases control plane
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - swift-haproxy-{{ $cluster_id }}
                - key: from
                  operator: In
                  values:
                  - deployment
              topologyKey: "kubernetes.io/hostname"
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - swift-haproxy-{{ $cluster_id }}
                - key: from
                  operator: In
                  values:
                  - deployment
              topologyKey: "kubernetes.cloud.sap/host"
          # Prefere to be scheduled on nodes not yet running swift-proxy. See bin/haproxy-start for explanation
          - weight: 5
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - swift-proxy-{{ $cluster_id }}
              topologyKey: "kubernetes.io/hostname"
      volumes:
        - name: tls-secret
          secret:
            secretName: tls-swift-{{ $cluster_id }}
        - name: haproxy-bin
          configMap:
            name: haproxy-bin
        - name: haproxy-etc-cluster
          configMap:
            name: haproxy-etc-{{ $cluster_id }}
      containers:
        - name: haproxy
          image: {{ $.Values.global.registryAlternateRegion }}/swift-haproxy:{{ $.Values.image_version_haproxy }}
          command:
            - /usr/bin/dumb-init
          args:
            - /bin/sh
            - /haproxy-bin/haproxy-start
          env:
            - name: DEBUG_CONTAINER
              value: "false"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          resources:
            requests:
              cpu: "1500m"
              memory: "400Mi"
            limits:
              cpu: "1500m"
              memory: "400Mi"
          volumeMounts:
            - mountPath: /tls-secret
              name: tls-secret
            - mountPath: /haproxy-bin
              name: haproxy-bin
            - mountPath: /haproxy-etc-cluster
              name: haproxy-etc-cluster
          livenessProbe:
            httpGet:
              path: /haproxy_test
              port: 80
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: {{ $cluster.proxy_public_port }}
              scheme: HTTPS
              httpHeaders:
                - name: Host
                  value: {{ tuple $cluster $.Values | include "swift_endpoint_host" }}
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 5
          ports:
            - name: metrics
              containerPort: 8404

---
{{- end }}
{{- end }}
{{- end }}
